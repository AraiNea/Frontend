name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: pizza
          POSTGRES_USER: pizzauser
          POSTGRES_PASSWORD: pizzapass
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    env:
      DB_URL: jdbc:postgresql://localhost:5432/pizza_mock
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: mysupersecuresecretthatatleast32characterslong

    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag cxgdn/arainea-frontend:latest

      - name: login
        run: docker login -u cxgdn -p dckr_pat_NQDxIKYdnllF5XD5HRDypIEYy1U

      - name: Pull docker Image
        run: docker pull docker.io/pattaratos/arainea-backend:latest

      # create network
      - name: Create network
        run: docker network create arainea-net

      - name: Run backend
        run: |
          docker run -d --name be \
            --network=arainea-net \
            -p 8080:8080 \
            --env SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/pizza_mock \
            --env SPRING_DATASOURCE_USERNAME=${{ env.DB_USERNAME }} \
            --env SPRING_DATASOURCE_PASSWORD=${{ env.DB_PASSWORD }} \
            --env APP_JWT_SECRET=${{ env.JWT_SECRET }} \
            --env APP_JWT_EXPIRES_DAYS=30 \
            pattaratos/arainea-backend:latest

      # เพิ่ม frontend container เข้า network เดียวกัน
      - name: Run container for frontend
        run: docker run -d --network=arainea-net -p 3000:3000 --name frontend cxgdn/arainea-frontend:latest

      # Debug backend logs if fail
      - name: Show backend logs
        if: failure()
        run: docker logs be

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: install dep
        run: npm ci

      # Cypress จะรอจน frontend ขึ้น (3000)
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
        env:
          VITE_API_URL: http://localhost:8080

      - name: push docker
        run: docker push cxgdn/arainea-frontend:latest
